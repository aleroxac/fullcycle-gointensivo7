apiVersion: 1
datasources:
  - name: grafana-loki
    uid: grafana-loki
    type: loki
    access: proxy
    orgId: 1
    version: 1
    url: http://grafana-loki:3100
    basicAuth: false
    isDefault: true
    editable: false

  - name: grafana-tempo
    uid: grafana-tempo
    type: tempo
    access: proxy
    orgId: 1
    version: 1
    url: http://grafana-tempo:3200
    basicAuth: false
    isDefault: true
    editable: false
    jsonData:
      httpMethod: GET
      serviceMap:
        datasourceUid: prometheus

  - name: prometheus
    type: prometheus
    uid: prometheus
    access: proxy
    orgId: 1
    version: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: true
    editable: false
    jsonData:
      httpMethod: GET

  - name: jaeger
    uid: jaeger
    type: jaeger
    access: proxy
    orgId: 1
    version: 1
    url: http://jaeger:16686
    basicAuth: false
    isDefault: true
    readOnly: false
    jsonData:
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'grafana-loki'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: ['job', 'instance', 'pod', 'namespace']
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="$${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'prom'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      nodeGraph:
        enabled: true
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'None'
